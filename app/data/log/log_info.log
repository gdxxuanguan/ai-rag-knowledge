25-05-02.15:05:10.340 [main            ] WARN  DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/C:/Users/roxy/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/C:/Users/roxy/.m2/repository/org/json/json/20231013/json-20231013.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

25-05-02.15:05:10.367 [main            ] INFO  RAGTest                - Starting RAGTest using Java 17.0.9 with PID 91224 (started by roxy in E:\projects\ai-rag-knowledge\app)
25-05-02.15:05:10.368 [main            ] INFO  RAGTest                - The following 1 profile is active: "dev"
25-05-02.15:05:11.304 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-05-02.15:05:11.307 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-05-02.15:05:11.335 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
25-05-02.15:05:12.251 [main            ] INFO  HikariDataSource       - HikariCP - Starting...
25-05-02.15:05:12.446 [main            ] INFO  HikariPool             - HikariCP - Added connection org.postgresql.jdbc.PgConnection@2673487b
25-05-02.15:05:12.448 [main            ] INFO  HikariDataSource       - HikariCP - Start completed.
25-05-02.15:05:13.971 [main            ] INFO  Version                - Redisson 3.44.0
25-05-02.15:05:14.319 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.15:05:14.334 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.15:05:15.107 [main            ] INFO  RAGTest                - Started RAGTest in 5.179 seconds (process running for 6.314)
25-05-02.15:06:09.493 [main            ] INFO  RAGTest                - 测试结果:{"metadata":{"promptMetadata":{},"rateLimit":{"requestsLimit":0,"requestsRemaining":0,"requestsReset":{"nano":0,"negative":false,"seconds":0,"units":["SECONDS","NANOS"],"zero":true},"tokensLimit":0,"tokensRemaining":0,"tokensReset":{"$ref":"$.metadata.rateLimit.requestsReset"}},"usage":{"generationTokens":0,"promptTokens":0,"totalTokens":0}},"result":{"metadata":{"contentFilterMetadata":{"generationTokens":337,"promptTokens":62,"totalTokens":399},"finishReason":"unknown"},"output":{"content":"<think>\n嗯，用户给了一个任务，让我根据“DOCUMENTS”里的信息来回答问题，并且要用中文回复。首先，我要仔细看看提供的文档内容是什么。\n\n文档中提到了“王大瓜，哪年出生”。看起来这是一个关于王大瓜年龄的查询。可能用户想了解王大瓜的出生年份，或者想知道王大瓜有多大、长大到什么程度。也有可能是想了解王大瓜在故事中的重要性或其他相关信息。\n\n接下来，我需要回想一下自己对“王大瓜”这个角色的理解。王大瓜是一个常见的人物形象，在中国文化中通常象征着高风亮节、孝顺父母等。作为主角，他可能年龄不老，但具体多少岁还不清楚，尤其是在没有更详细背景的情况下。\n\n如果用户只是想知道他的出生年份，那么根据现有的信息是无法确定的。因为文档里并没有提供具体的出生日期或年份，所以只能推测或者说明不确定。\n\n另外，考虑到这是一个关于“王大瓜哪年出生”的问题，可能还有其他上下文没被完全呈现出来。比如，是否有其他的提示或线索可以推断出他出生的年份？如果没有，那么只能按照现有的信息来回答，指出无法确定这一点。\n\n最后，我要确保回复符合要求：用中文，而且作为如果 unsure的情况下的回应，即“我并不清楚答案是什么。”这样显得谨慎，不会产生误解。\n\n总结一下，我会回复：“我不知道王大瓜出生的年份是多少。”同时提醒用户如果有更多的信息或上下文，可以提供帮助。\n</think>\n\n我不知道王大瓜出生的年份是多少。","media":[],"messageType":"ASSISTANT","properties":{}}},"results":[{"$ref":"$.metadata.rateLimit.result"}]}
25-05-02.15:06:09.517 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown initiated...
25-05-02.15:06:09.519 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown completed.
25-05-02.15:28:00.776 [main            ] WARN  DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/C:/Users/roxy/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/C:/Users/roxy/.m2/repository/org/json/json/20231013/json-20231013.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

25-05-02.15:28:00.800 [main            ] INFO  RAGTest                - Starting RAGTest using Java 17.0.9 with PID 99224 (started by roxy in E:\projects\ai-rag-knowledge\app)
25-05-02.15:28:00.801 [main            ] INFO  RAGTest                - The following 1 profile is active: "dev"
25-05-02.15:28:01.711 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-05-02.15:28:01.715 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-05-02.15:28:01.750 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
25-05-02.15:28:02.719 [main            ] INFO  HikariDataSource       - HikariCP - Starting...
25-05-02.15:28:02.890 [main            ] INFO  HikariPool             - HikariCP - Added connection org.postgresql.jdbc.PgConnection@147c00aa
25-05-02.15:28:02.892 [main            ] INFO  HikariDataSource       - HikariCP - Start completed.
25-05-02.15:28:04.103 [main            ] INFO  Version                - Redisson 3.44.0
25-05-02.15:28:04.452 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.15:28:04.476 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.15:28:05.319 [main            ] INFO  RAGTest                - Started RAGTest in 5.005 seconds (process running for 6.111)
25-05-02.15:28:06.691 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown initiated...
25-05-02.15:28:06.693 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown completed.
25-05-02.15:30:44.716 [main            ] WARN  DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/C:/Users/roxy/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/C:/Users/roxy/.m2/repository/org/json/json/20231013/json-20231013.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

25-05-02.15:30:44.740 [main            ] INFO  RAGTest                - Starting RAGTest using Java 17.0.9 with PID 93028 (started by roxy in E:\projects\ai-rag-knowledge\app)
25-05-02.15:30:44.741 [main            ] INFO  RAGTest                - The following 1 profile is active: "dev"
25-05-02.15:30:45.524 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-05-02.15:30:45.528 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-05-02.15:30:45.553 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
25-05-02.15:30:46.278 [main            ] INFO  HikariDataSource       - HikariCP - Starting...
25-05-02.15:30:47.329 [main            ] ERROR HikariPool             - HikariCP - Exception during pool initialization.
org.postgresql.util.PSQLException: Connection to 127.0.0.1:15432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:342)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:388)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:444)
	at org.springframework.ai.vectorstore.PgVectorStore.afterPropertiesSet(PgVectorStore.java:335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:603)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:574)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:736)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:270)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:247)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 81 common frames omitted
25-05-02.15:30:47.331 [main            ] WARN  GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ollamaController': Injection of resource dependencies failed
25-05-02.15:30:47.338 [main            ] INFO  ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
25-05-02.15:30:47.352 [main            ] ERROR SpringApplication      - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ollamaController': Injection of resource dependencies failed
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:369)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:247)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'pgVectorStore' defined in class path resource [com/xuanguan/dev/config/OllamaConfig.class]: Failed to obtain JDBC Connection
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:603)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:574)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:736)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:270)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:366)
	... 49 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:84)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:388)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:444)
	at org.springframework.ai.vectorstore.PgVectorStore.afterPropertiesSet(PgVectorStore.java:335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 62 common frames omitted
Caused by: org.postgresql.util.PSQLException: Connection to 127.0.0.1:15432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:342)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	... 67 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 81 common frames omitted
25-05-02.15:30:47.357 [main            ] WARN  TestContextManager     - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.xuanguan.dev.test.RAGTest@4813d0]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@64757d56 testClass = com.xuanguan.dev.test.RAGTest, locations = [], classes = [com.xuanguan.dev.Application], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3e694b3f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@397fbdb, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@408d971b, org.springframework.boot.test.web.reactive.server.WebTestClientContextCustomizer@36ebc363, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3eb738bb, org.springframework.boot.test.context.SpringBootTestAnnotation@70159598], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:247)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ollamaController': Injection of resource dependencies failed
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:369)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 27 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'pgVectorStore' defined in class path resource [com/xuanguan/dev/config/OllamaConfig.class]: Failed to obtain JDBC Connection
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeanByName(AbstractAutowireCapableBeanFactory.java:461)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:603)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:574)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:736)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:270)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessProperties(CommonAnnotationBeanPostProcessor.java:366)
	... 49 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:84)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:388)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:444)
	at org.springframework.ai.vectorstore.PgVectorStore.afterPropertiesSet(PgVectorStore.java:335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 62 common frames omitted
Caused by: org.postgresql.util.PSQLException: Connection to 127.0.0.1:15432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:342)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:263)
	at org.postgresql.Driver.makeConnection(Driver.java:443)
	at org.postgresql.Driver.connect(Driver.java:297)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:160)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:118)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	... 67 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:132)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:258)
	... 81 common frames omitted
25-05-02.15:33:47.241 [main            ] WARN  DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/C:/Users/roxy/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/C:/Users/roxy/.m2/repository/org/json/json/20231013/json-20231013.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

25-05-02.15:33:47.264 [main            ] INFO  RAGTest                - Starting RAGTest using Java 17.0.9 with PID 92580 (started by roxy in E:\projects\ai-rag-knowledge\app)
25-05-02.15:33:47.266 [main            ] INFO  RAGTest                - The following 1 profile is active: "dev"
25-05-02.15:33:48.116 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-05-02.15:33:48.119 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-05-02.15:33:48.148 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
25-05-02.15:33:48.930 [main            ] INFO  HikariDataSource       - HikariCP - Starting...
25-05-02.15:33:49.102 [main            ] INFO  HikariPool             - HikariCP - Added connection org.postgresql.jdbc.PgConnection@7cdfa824
25-05-02.15:33:49.103 [main            ] INFO  HikariDataSource       - HikariCP - Start completed.
25-05-02.15:33:50.269 [main            ] INFO  Version                - Redisson 3.44.0
25-05-02.15:33:50.583 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.15:33:50.599 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.15:33:51.345 [main            ] INFO  RAGTest                - Started RAGTest in 4.571 seconds (process running for 5.554)
25-05-02.15:33:52.599 [main            ] INFO  RAGTest                - 上传完成
25-05-02.15:33:52.619 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown initiated...
25-05-02.15:33:52.621 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown completed.
25-05-02.15:34:06.980 [main            ] WARN  DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/C:/Users/roxy/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/C:/Users/roxy/.m2/repository/org/json/json/20231013/json-20231013.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

25-05-02.15:34:07.005 [main            ] INFO  RAGTest                - Starting RAGTest using Java 17.0.9 with PID 92744 (started by roxy in E:\projects\ai-rag-knowledge\app)
25-05-02.15:34:07.006 [main            ] INFO  RAGTest                - The following 1 profile is active: "dev"
25-05-02.15:34:07.788 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-05-02.15:34:07.791 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-05-02.15:34:07.818 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
25-05-02.15:34:08.580 [main            ] INFO  HikariDataSource       - HikariCP - Starting...
25-05-02.15:34:08.722 [main            ] INFO  HikariPool             - HikariCP - Added connection org.postgresql.jdbc.PgConnection@4cd7e993
25-05-02.15:34:08.725 [main            ] INFO  HikariDataSource       - HikariCP - Start completed.
25-05-02.15:34:09.343 [main            ] INFO  Version                - Redisson 3.44.0
25-05-02.15:34:09.678 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.15:34:09.693 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.15:34:10.390 [main            ] INFO  RAGTest                - Started RAGTest in 3.883 seconds (process running for 4.776)
25-05-02.15:34:11.609 [main            ] INFO  RAGTest                - 上传完成
25-05-02.15:34:45.508 [main            ] INFO  RAGTest                - 测试结果:{"metadata":{"promptMetadata":{},"rateLimit":{"requestsLimit":0,"requestsRemaining":0,"requestsReset":{"nano":0,"negative":false,"seconds":0,"units":["SECONDS","NANOS"],"zero":true},"tokensLimit":0,"tokensRemaining":0,"tokensReset":{"$ref":"$.metadata.rateLimit.requestsReset"}},"usage":{"generationTokens":0,"promptTokens":0,"totalTokens":0}},"result":{"metadata":{"contentFilterMetadata":{"generationTokens":256,"promptTokens":86,"totalTokens":342},"finishReason":"unknown"},"output":{"content":"<think>\n嗯，我收到用户的查询“王大瓜 1990年出生王大瓜 1990年出生”，看起来有点重复。首先，我需要理解用户的需求是什么。看起来他们是在测试我的知识库是否正确，或者可能在测试我的记忆能力。\n\n接下来，我要考虑用户提到的 DOCUMENTS内容：王大瓜 1990年出生王大瓜 1990年出生。这里有两个相同的陈述，似乎重复了两次。用户的提问和回答都有所重复，这可能是因为他们想确认是否正确或者确保信息无误。\n\n然后，我需要判断用户是否真的希望得到准确的信息或是否只是测试我的反应速度。如果用户是想确认自己的知识库是否正确，那么我会回复“王大瓜，哪年出生”，这样可以防止重复错误并引导他们继续思考。\n\n另外，用户可能在测试我的语言能力和信息准确性，所以我会强调这一点，并提供一个简短的回应来避免混淆。\n\n最后，考虑到用户的原意可能是询问王大瓜出生年份的问题，我需要确保回答准确无误。因此，我会给出正确的答案，并用中文回复，并引导他们继续提问。\n</think>\n\n王大瓜，哪年出生","media":[],"messageType":"ASSISTANT","properties":{}}},"results":[{"$ref":"$.metadata.rateLimit.result"}]}
25-05-02.15:34:45.530 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown initiated...
25-05-02.15:34:45.533 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown completed.
25-05-02.15:36:26.341 [main            ] WARN  DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/C:/Users/roxy/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/C:/Users/roxy/.m2/repository/org/json/json/20231013/json-20231013.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

25-05-02.15:36:26.365 [main            ] INFO  RAGTest                - Starting RAGTest using Java 17.0.9 with PID 87816 (started by roxy in E:\projects\ai-rag-knowledge\app)
25-05-02.15:36:26.365 [main            ] INFO  RAGTest                - The following 1 profile is active: "dev"
25-05-02.15:36:27.233 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-05-02.15:36:27.238 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-05-02.15:36:27.281 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
25-05-02.15:36:28.176 [main            ] INFO  HikariDataSource       - HikariCP - Starting...
25-05-02.15:36:28.326 [main            ] INFO  HikariPool             - HikariCP - Added connection org.postgresql.jdbc.PgConnection@5368e981
25-05-02.15:36:28.328 [main            ] INFO  HikariDataSource       - HikariCP - Start completed.
25-05-02.15:36:29.032 [main            ] INFO  Version                - Redisson 3.44.0
25-05-02.15:36:29.386 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.15:36:29.402 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.15:36:30.106 [main            ] INFO  RAGTest                - Started RAGTest in 4.243 seconds (process running for 5.2)
25-05-02.15:36:31.478 [main            ] INFO  RAGTest                - 上传完成
25-05-02.15:36:41.186 [main            ] INFO  RAGTest                - 测试结果:{"metadata":{"promptMetadata":{},"rateLimit":{"requestsLimit":0,"requestsRemaining":0,"requestsReset":{"nano":0,"negative":false,"seconds":0,"units":["SECONDS","NANOS"],"zero":true},"tokensLimit":0,"tokensRemaining":0,"tokensReset":{"$ref":"$.metadata.rateLimit.requestsReset"}},"usage":{"generationTokens":0,"promptTokens":0,"totalTokens":0}},"result":{"metadata":{"contentFilterMetadata":{"generationTokens":174,"promptTokens":96,"totalTokens":270},"finishReason":"unknown"},"output":{"content":"<think>\n嗯，用户给了一个查询，我需要先看看里面的信息。文档里有三个名字都是“王大瓜”，但只说了“1990年出生”。这三个字看起来重复，可能是一个打字错误或者冗余的内容。所以，我需要判断用户的问题是关于哪一年出生的。\n\n用户问的是“王大瓜 1990年出生王大瓜 1990年出生王大瓜 1990年出生”，可能是在测试我的识别能力，看看我能从重复的信息中提取关键信息。根据用户提供的示例，正确的回答应该是“哪年出生”，而不是“王大瓜”。\n\n所以，我应该告诉用户：“哪年出生”，并确认了这一点，避免误以为是出生的具体年份。\n</think>\n\n王大瓜，哪年出生","media":[],"messageType":"ASSISTANT","properties":{}}},"results":[{"$ref":"$.metadata.rateLimit.result"}]}
25-05-02.15:36:41.203 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown initiated...
25-05-02.15:36:41.206 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown completed.
25-05-02.15:50:27.554 [main            ] WARN  DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/C:/Users/roxy/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/C:/Users/roxy/.m2/repository/org/json/json/20231013/json-20231013.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

25-05-02.15:50:27.582 [main            ] INFO  RAGTest                - Starting RAGTest using Java 17.0.9 with PID 94696 (started by roxy in E:\projects\ai-rag-knowledge\app)
25-05-02.15:50:27.584 [main            ] INFO  RAGTest                - The following 1 profile is active: "dev"
25-05-02.15:50:28.591 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-05-02.15:50:28.594 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-05-02.15:50:28.626 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
25-05-02.15:50:29.548 [main            ] INFO  HikariDataSource       - HikariCP - Starting...
25-05-02.15:50:29.701 [main            ] INFO  HikariPool             - HikariCP - Added connection org.postgresql.jdbc.PgConnection@74bdfa0b
25-05-02.15:50:29.702 [main            ] INFO  HikariDataSource       - HikariCP - Start completed.
25-05-02.15:50:30.966 [main            ] INFO  Version                - Redisson 3.44.0
25-05-02.15:50:31.333 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.15:50:31.348 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.15:50:32.117 [main            ] INFO  RAGTest                - Started RAGTest in 5.034 seconds (process running for 6.133)
25-05-02.15:51:04.333 [main            ] INFO  RAGTest                - 测试结果:{"metadata":{"promptMetadata":{},"rateLimit":{"requestsLimit":0,"requestsRemaining":0,"requestsReset":{"nano":0,"negative":false,"seconds":0,"units":["SECONDS","NANOS"],"zero":true},"tokensLimit":0,"tokensRemaining":0,"tokensReset":{"$ref":"$.metadata.rateLimit.requestsReset"}},"usage":{"generationTokens":0,"promptTokens":0,"totalTokens":0}},"result":{"metadata":{"contentFilterMetadata":{"generationTokens":202,"promptTokens":96,"totalTokens":298},"finishReason":"unknown"},"output":{"content":"<think>\n首先，我看到用户的问题是要用提供的信息回答，但必须像内向的人一样，没有太多特别的表达。然后，他们还指出如果不确定，就要直接说不知道。\n\n接着，用户提供了一个段落：“王大瓜 1990年出生王大瓜 1990年出生王大瓜 1990年出生”。看起来是重复的信息，可能是在测试是否能识别出出生年份。\n\n然后，用户的问题询问“哪年出生”，需要回答“1990”。\n\n最后，用户再次询问“哪年出生”，再次确认了解情况，并说明需要像内向的人一样回答。\n\n整个思考过程中，我需要确保在提供准确答案的同时，保持不使用过于复杂的语言，而是简单直接。同时，避免使用任何Markdown格式。\n</think>\n\n王大瓜 1990年出生王大瓜 1990年出生王大瓜 1990年出生","media":[],"messageType":"ASSISTANT","properties":{}}},"results":[{"$ref":"$.metadata.rateLimit.result"}]}
25-05-02.15:51:04.356 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown initiated...
25-05-02.15:51:04.360 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown completed.
25-05-02.15:52:50.577 [main            ] WARN  DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/C:/Users/roxy/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/C:/Users/roxy/.m2/repository/org/json/json/20231013/json-20231013.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

25-05-02.15:52:50.611 [main            ] INFO  RAGTest                - Starting RAGTest using Java 17.0.9 with PID 96288 (started by roxy in E:\projects\ai-rag-knowledge\app)
25-05-02.15:52:50.612 [main            ] INFO  RAGTest                - The following 1 profile is active: "dev"
25-05-02.15:52:51.509 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-05-02.15:52:51.512 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-05-02.15:52:51.549 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
25-05-02.15:52:52.474 [main            ] INFO  HikariDataSource       - HikariCP - Starting...
25-05-02.15:52:52.650 [main            ] INFO  HikariPool             - HikariCP - Added connection org.postgresql.jdbc.PgConnection@1a89414e
25-05-02.15:52:52.652 [main            ] INFO  HikariDataSource       - HikariCP - Start completed.
25-05-02.15:52:53.265 [main            ] INFO  Version                - Redisson 3.44.0
25-05-02.15:52:53.616 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.15:52:53.634 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.15:52:54.384 [main            ] INFO  RAGTest                - Started RAGTest in 4.316 seconds (process running for 5.222)
25-05-02.15:52:59.963 [main            ] INFO  RAGTest                - 测试结果:{"metadata":{"promptMetadata":{},"rateLimit":{"requestsLimit":0,"requestsRemaining":0,"requestsReset":{"nano":0,"negative":false,"seconds":0,"units":["SECONDS","NANOS"],"zero":true},"tokensLimit":0,"tokensRemaining":0,"tokensReset":{"$ref":"$.metadata.rateLimit.requestsReset"}},"usage":{"generationTokens":0,"promptTokens":0,"totalTokens":0}},"result":{"metadata":{"contentFilterMetadata":{"generationTokens":88,"promptTokens":96,"totalTokens":184},"finishReason":"unknown"},"output":{"content":"<think>\n好的，我需要回答用户的问题。根据提供的信息，王大瓜在1990年出生。用户已经提供了王大瓜的出生年份，所以他们可能是在询问王大瓜的年龄或相关问题。我应该确认这一点，并告诉用户关于王大瓜的信息。\n</think>\n\n王大瓜在1990年出生。这个信息帮助我了解王大瓜的基本年龄。","media":[],"messageType":"ASSISTANT","properties":{}}},"results":[{"$ref":"$.metadata.rateLimit.result"}]}
25-05-02.15:52:59.989 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown initiated...
25-05-02.15:52:59.992 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown completed.
25-05-02.15:54:20.015 [main            ] WARN  DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/C:/Users/roxy/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/C:/Users/roxy/.m2/repository/org/json/json/20231013/json-20231013.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

25-05-02.15:54:20.042 [main            ] INFO  RAGTest                - Starting RAGTest using Java 17.0.9 with PID 98276 (started by roxy in E:\projects\ai-rag-knowledge\app)
25-05-02.15:54:20.043 [main            ] INFO  RAGTest                - The following 1 profile is active: "dev"
25-05-02.15:54:20.928 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-05-02.15:54:20.932 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-05-02.15:54:20.959 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
25-05-02.15:54:22.169 [main            ] INFO  HikariDataSource       - HikariCP - Starting...
25-05-02.15:54:22.454 [main            ] INFO  HikariPool             - HikariCP - Added connection org.postgresql.jdbc.PgConnection@17f8db6
25-05-02.15:54:22.457 [main            ] INFO  HikariDataSource       - HikariCP - Start completed.
25-05-02.15:54:23.225 [main            ] INFO  Version                - Redisson 3.44.0
25-05-02.15:54:23.630 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.15:54:23.648 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.15:54:24.441 [main            ] INFO  RAGTest                - Started RAGTest in 4.88 seconds (process running for 5.805)
25-05-02.15:54:43.797 [main            ] INFO  RAGTest                - 测试结果:{"metadata":{"promptMetadata":{},"rateLimit":{"requestsLimit":0,"requestsRemaining":0,"requestsReset":{"nano":0,"negative":false,"seconds":0,"units":["SECONDS","NANOS"],"zero":true},"tokensLimit":0,"tokensRemaining":0,"tokensReset":{"$ref":"$.metadata.rateLimit.requestsReset"}},"usage":{"generationTokens":0,"promptTokens":0,"totalTokens":0}},"result":{"metadata":{"contentFilterMetadata":{"generationTokens":331,"promptTokens":96,"totalTokens":427},"finishReason":"unknown"},"output":{"content":"<think>\n嗯，用户给了我一个查询，看起来是关于“王大瓜”的出生年份的问题。让我先仔细看看提供的文档内容。\n\n文档里只写着“王大瓜 1990年出生”重复三次，好像只是为了让信息更清晰或者重复了一次。所以，我需要从这里提取关键的信息来回答用户的问题。\n\n用户的问题是：“王大瓜，哪年出生”。看起来他们想要了解王大瓜的出生年份，但文档里并没有给出这个信息。可能是因为文档的内容不够详细，或者用户没提供足够的信息让我去判断。\n\n首先，我要分析用户的查询和提供的资料。用户的问题涉及到王大瓜的出生年份，而提供的文档只说“1990年出生”，这似乎是一个关键点。不过，问题中并没有提到其他年份的信息，所以可能需要假设用户想知道这个数字或者有其他的含义。\n\n考虑到用户可能不知道“哪一年出生”，也就是说，他们希望了解王大瓜的出生时间，而不是假设某个特定年份。但文档里并没有提供具体的年份数据，只是重复了一个相同的句子，所以无法直接回答这一点。\n\n另外，用户的回复必须是中文，并且要基于提供的信息来判断。然而，在缺乏明确信息的情况下，我只能说明不知道，或者询问是否有遗漏的信息可以帮助我解答这个问题。\n\n最后，考虑到用户的查询需要“用信息来自 DOCUMENTS”来提供准确的答案，而这里文档中没有足够的信息支持这一点，所以我的回复应该是不完全的，但尽量解释清楚我无法提供更多信息的情况。\n</think>\n\n王大瓜，哪年出生","media":[],"messageType":"ASSISTANT","properties":{}}},"results":[{"$ref":"$.metadata.rateLimit.result"}]}
25-05-02.15:54:43.818 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown initiated...
25-05-02.15:54:43.820 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown completed.
25-05-02.16:00:24.820 [main            ] WARN  DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/C:/Users/roxy/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/C:/Users/roxy/.m2/repository/org/json/json/20231013/json-20231013.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

25-05-02.16:00:24.845 [main            ] INFO  RAGTest                - Starting RAGTest using Java 17.0.9 with PID 92920 (started by roxy in E:\projects\ai-rag-knowledge\app)
25-05-02.16:00:24.846 [main            ] INFO  RAGTest                - The following 1 profile is active: "dev"
25-05-02.16:00:25.721 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-05-02.16:00:25.724 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-05-02.16:00:25.753 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
25-05-02.16:00:26.629 [main            ] INFO  HikariDataSource       - HikariCP - Starting...
25-05-02.16:00:26.821 [main            ] INFO  HikariPool             - HikariCP - Added connection org.postgresql.jdbc.PgConnection@71fb8301
25-05-02.16:00:26.823 [main            ] INFO  HikariDataSource       - HikariCP - Start completed.
25-05-02.16:00:28.012 [main            ] INFO  Version                - Redisson 3.44.0
25-05-02.16:00:28.358 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.16:00:28.375 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.16:00:29.132 [main            ] INFO  RAGTest                - Started RAGTest in 4.756 seconds (process running for 5.774)
25-05-02.16:00:44.364 [main            ] INFO  RAGTest                - 测试结果:{"metadata":{"promptMetadata":{},"rateLimit":{"requestsLimit":0,"requestsRemaining":0,"requestsReset":{"nano":0,"negative":false,"seconds":0,"units":["SECONDS","NANOS"],"zero":true},"tokensLimit":0,"tokensRemaining":0,"tokensReset":{"$ref":"$.metadata.rateLimit.requestsReset"}},"usage":{"generationTokens":0,"promptTokens":0,"totalTokens":0}},"result":{"metadata":{"contentFilterMetadata":{"generationTokens":201,"promptTokens":62,"totalTokens":263},"finishReason":"unknown"},"output":{"content":"<think>\n好，我需要回答“王大瓜，哪年出生”这个问题。根据提供的文档信息，“王大瓜”指的是王大瓜菜，属于《中国诗词歌曲一百》中的歌曲。这首歌中提到的作者是许 component和徐明华。\n\n接下来，我应该回忆一下这首歌的编曲时间。记得这首歌是在1996年发行的。因此，王大瓜菜在1996年出生。\n\n总结一下：王大瓜菜于1996年发行，所以它出生的时间应该是1996年。\n</think>\n\n王大瓜菜是《中国诗词歌曲一百》中的一首歌曲，由许 component和徐明华演唱。这首歌于1996年发行，所以王大瓜菜在1996年出生。\n\n**答案：** 王大瓜菜是在1996年发行的，因此它出生的时间是1996年。","media":[],"messageType":"ASSISTANT","properties":{}}},"results":[{"$ref":"$.metadata.rateLimit.result"}]}
25-05-02.16:00:44.392 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown initiated...
25-05-02.16:00:44.395 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown completed.
25-05-02.16:02:56.355 [main            ] WARN  DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/C:/Users/roxy/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/C:/Users/roxy/.m2/repository/org/json/json/20231013/json-20231013.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

25-05-02.16:02:56.380 [main            ] INFO  RAGTest                - Starting RAGTest using Java 17.0.9 with PID 99360 (started by roxy in E:\projects\ai-rag-knowledge\app)
25-05-02.16:02:56.381 [main            ] INFO  RAGTest                - The following 1 profile is active: "dev"
25-05-02.16:02:57.110 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-05-02.16:02:57.113 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-05-02.16:02:57.142 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
25-05-02.16:02:58.009 [main            ] INFO  HikariDataSource       - HikariCP - Starting...
25-05-02.16:02:58.149 [main            ] INFO  HikariPool             - HikariCP - Added connection org.postgresql.jdbc.PgConnection@586737ff
25-05-02.16:02:58.150 [main            ] INFO  HikariDataSource       - HikariCP - Start completed.
25-05-02.16:02:58.778 [main            ] INFO  Version                - Redisson 3.44.0
25-05-02.16:02:59.103 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.16:02:59.117 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.16:02:59.740 [main            ] INFO  RAGTest                - Started RAGTest in 3.817 seconds (process running for 4.753)
25-05-02.16:03:01.024 [main            ] INFO  RAGTest                - 上传完成
25-05-02.16:03:14.892 [main            ] INFO  RAGTest                - 测试结果:{"metadata":{"promptMetadata":{},"rateLimit":{"requestsLimit":0,"requestsRemaining":0,"requestsReset":{"nano":0,"negative":false,"seconds":0,"units":["SECONDS","NANOS"],"zero":true},"tokensLimit":0,"tokensRemaining":0,"tokensReset":{"$ref":"$.metadata.rateLimit.requestsReset"}},"usage":{"generationTokens":0,"promptTokens":0,"totalTokens":0}},"result":{"metadata":{"contentFilterMetadata":{"generationTokens":261,"promptTokens":76,"totalTokens":337},"finishReason":"unknown"},"output":{"content":"<think>\n嗯，好的，我需要帮助用户回答关于“王大瓜”是否是1990年出生的问题。根据提供的 Dokument 的信息，“王大瓜 1990年出生”，这应该是一个明确的信息点。\n\n首先，我要确认这句话的结构。“王大瓜”后面跟着数字“1990”，看起来像是一个完整的信息表达式。因此，可以断定“王大瓜”是1990年出生的。\n\n接下来，考虑用户的使用习惯。用户可能是在做某种对话，比如与专业人士交流或者准备考试时的问题解答。在这种情况下，提供准确的答案会更关键。\n\n此外，“王大瓜”后面跟着数字的表达方式符合中文中常用的信息结构，所以回答应该是直接且明确的：“是。” 因为“1990年出生”。\n\n另外，用户可能需要确认信息来源是否正确，但根据提供的 Dokument 信息，这已经足够准确。没有其他信息可以用来验证或反驳这个结论。\n\n最后，确保答案符合要求：用中文回复，并且不使用Markdown格式。所以，“王大瓜 1990年出生”是正确的回答。\n</think>\n\n是，王大瓜是1990年出生的。","media":[],"messageType":"ASSISTANT","properties":{}}},"results":[{"$ref":"$.metadata.rateLimit.result"}]}
25-05-02.16:03:14.907 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown initiated...
25-05-02.16:03:14.910 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown completed.
25-05-02.16:04:53.123 [main            ] WARN  DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer - 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/C:/Users/roxy/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/C:/Users/roxy/.m2/repository/org/json/json/20231013/json-20231013.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

25-05-02.16:04:53.146 [main            ] INFO  RAGTest                - Starting RAGTest using Java 17.0.9 with PID 98472 (started by roxy in E:\projects\ai-rag-knowledge\app)
25-05-02.16:04:53.147 [main            ] INFO  RAGTest                - The following 1 profile is active: "dev"
25-05-02.16:04:53.989 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
25-05-02.16:04:53.993 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
25-05-02.16:04:54.028 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
25-05-02.16:04:54.927 [main            ] INFO  HikariDataSource       - HikariCP - Starting...
25-05-02.16:04:55.106 [main            ] INFO  HikariPool             - HikariCP - Added connection org.postgresql.jdbc.PgConnection@22e813fc
25-05-02.16:04:55.108 [main            ] INFO  HikariDataSource       - HikariCP - Start completed.
25-05-02.16:04:55.802 [main            ] INFO  Version                - Redisson 3.44.0
25-05-02.16:04:56.128 [redisson-netty-1-4] INFO  ConnectionsHolder      - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.16:04:56.148 [redisson-netty-1-13] INFO  ConnectionsHolder      - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
25-05-02.16:04:57.002 [main            ] INFO  RAGTest                - Started RAGTest in 4.42 seconds (process running for 5.606)
25-05-02.16:06:29.500 [HikariCP housekeeper] WARN  HikariPool             - HikariCP - Thread starvation or clock leap detected (housekeeper delta=1m34s287ms786µs100ns).
25-05-02.16:06:29.587 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown initiated...
25-05-02.16:06:29.594 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariCP - Shutdown completed.
